{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","setFilter","query","setQuery","value","onChange","event","target","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setSelectedTodo","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","todosFromServer","visiableTodos","list","todoList","todoItem","includes","filterList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.925644cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: Todo | null;\n  onSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = (\n  { todos, selectedTodo, onSelectedTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={selectedTodo?.id === todo.id\n            ? 'has-background-info-light'\n            : ''}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodo?.id === todo.id\n                  ? (<i className=\"far fa-eye-slash\" />)\n                  : (<i className=\"far fa-eye\" />)}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","interface Props {\n  filter: string,\n  setFilter: (filter: string) => void,\n  query: string,\n  setQuery: (query:string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    filter, setFilter, query, setQuery,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => setFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              setQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = (\n  { selectedTodo, setSelectedTodo },\n) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(user => setSelectedUser(user));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  const filterList = (list: Todo[]) => {\n    let todoList = list.filter(todoItem => todoItem.title.includes(query));\n\n    switch (filter) {\n      case 'all': break;\n      case 'completed': todoList = todoList.filter(todoItem => todoItem.completed); break;\n      case 'active': todoList = todoList.filter(todoItem => !todoItem.completed); break;\n      default: break;\n    }\n\n    return todoList;\n  };\n\n  const visiableTodos = filterList(todos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={visiableTodos}\n                selectedTodo={selectedTodo}\n                onSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}